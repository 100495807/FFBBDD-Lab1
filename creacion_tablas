DROP TABLE review;
DROP TABLE pedidoArticuloCliente;
DROP TABLE pedidoCliente;
DROP TABLE registrado;
DROP TABLE descuento;
DROP TABLE tarjetaCredito;
DROP TABLE direccion;
DROP TABLE cliente;
DROP TABLE proveedorArticulo;
DROP TABLE pedidosProveedor;
DROP TABLE proveedor;
DROP TABLE articulo;
DROP TABLE formatoProducto;
DROP TABLE cantidad;
DROP TABLE formato;
DROP TABLE producto;





CREATE TABLE producto (
    id          NUMBER(15),            
    nombre      VARCHAR2 (50) NOT NULL,
    coffea      VARCHAR2 (50) NOT NULL,
    varietal    VARCHAR2 (50) NOT NULL, ------etc
    origen      VARCHAR2 (50) NOT NULL,
    tostado     VARCHAR2 (50) NOT NULL,
    cafeina     VARCHAR2 (4) NOT NULL,            --yes/no
    CONSTRAINT pk_producto PRIMARY KEY (id),
    CONSTRAINT ck_producto_cafeina CHECK (cafeina IN ('yes','no')),
    CONSTRAINT ck_producto_tostado CHECK (tostado IN ('natural', 'torrefacto', 'mezcla'))
);

CREATE TABLE formato (
    id          NUMBER(15),
    nombre      VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_formato PRIMARY KEY(id),
    CONSTRAINT ck_formato CHECK (nombre IN ('grano crudo', 'grano tostado', 'molido', 'liofilizado', 'capsula', 'preparado'))--PONER TILDE EN CAPSULA
);
CREATE TABLE cantidad (
    id          NUMBER(15),
    cantidad    NUMBER(7) NOT NULL,
    magnitud    VARCHAR2(50) NOT NULL,
    packaging   VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_cantidad PRIMARY KEY(id)
);

CREATE TABLE formatoProducto (
    idProducto     NUMBER(15) NOT NULL,
    idFormato      NUMBER(15) NOT NULL,
    idCantidad     NUMBER(15) NOT NULL,
    CONSTRAINT fk_formatoProducto_idProducto FOREIGN KEY(idProducto) REFERENCES producto(id) ON DELETE CASCADE,
    CONSTRAINT fk_formatoProducto_idFormato FOREIGN KEY(idFormato) REFERENCES formato(id) ON DELETE CASCADE,
    CONSTRAINT fk_formatoProducto_idCantidad FOREIGN KEY(idCantidad) REFERENCES cantidad(id) ON DELETE CASCADE
);

CREATE TABLE articulo (
    idCodigo    NUMBER(15),
    cantidad    NUMBER(7) NOT NULL,
    pvp         NUMBER(7) NOT NULL,
    stock       NUMBER(7) NOT NULL,
    producto    NUMBER(7) NOT NULL,
    stockMin    NUMBER(2) NOT NULL,
    stockMax    NUMBER(7) NOT NULL,
    CONSTRAINT pk_articulo PRIMARY KEY(idCodigo),
    CONSTRAINT fk_articulo_cantidad FOREIGN KEY(cantidad) REFERENCES cantidad(id) ON DELETE CASCADE,
    CONSTRAINT fk_articulo_producto FOREIGN KEY(producto) REFERENCES producto(id) ON DELETE CASCADE,
    CONSTRAINT ck_articulo_stockMin CHECK (stockMin>5),
    CONSTRAINT ck_articulo_stockMax CHECK (stockMax<15)
);

CREATE TABLE proveedor (
    id              NUMBER(15),
    cif             NUMBER(9) NOT NULL,
    nombreComercio  VARCHAR2(50) NOT NULL,
    correo          VARCHAR2(50) NOT NULL,
    telefono        NUMBER(10) NOT NULL,
    CuentaBanco    VARCHAR2(50) NOT NULL,                          
    DireccionPostal  VARCHAR2(200) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    tiempoMedio     NUMBER(7) NOT NULL,
    numPedido       NUMBER(7) NOT NULL,
    persona         VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_proveedor PRIMARY KEY(id),
    CONSTRAINT uk_proveedor_nombreComercio UNIQUE (nombreComercio),
    CONSTRAINT uk_proveedor_correo UNIQUE (correo),
    CONSTRAINT uk_proveedor_telefono UNIQUE (telefono),
    CONSTRAINT uk_proveedor_CuentaBanco UNIQUE (CuentaBanco),
    CONSTRAINT uk_proveedor_Direccion_Postal UNIQUE (DireccionPostal)
);

CREATE TABLE pedidosProveedor (
    id                  NUMBER(15), 
    proveedor           NUMBER(15) NOT NULL,
    cantidadUnidad      NUMBER(7) NOT NULL,
    fecha               VARCHAR2(50) NOT NULL,
    hora                VARCHAR2(50) NOT NULL,
    estado              VARCHAR(20) NOT NULL,
    articulo            NUMBER(7) NOT NULL,
    costePedidoTotal    NUMBER(7) NOT NULL,
    CONSTRAINT pk_pedidosProveedor PRIMARY KEY(id),
    CONSTRAINT fk_pedidosProveedor_proveedor FOREIGN KEY(proveedor) REFERENCES proveedor(id) ON DELETE SET NULL,
    CONSTRAINT fk_pedidosProveedor_articulo FOREIGN KEY(articulo) REFERENCES articulo(idCodigo), --oracle no poner nada es DNA o UNA
    CONSTRAINT ck_pedidosProveedor_estado CHECK (estado IN ('draft', 'placed', 'fulfilled'))
);

CREATE TABLE proveedorArticulo (
    idArticulo      NUMBER(15) NOT NULL,
    idProveedor     NUMBER(15) NOT NULL,
    coste           NUMBER(15) NOT NULL,
    CONSTRAINT fk_proveedorArticulo_idArticulo FOREIGN KEY(idArticulo) REFERENCES articulo(idCodigo) ON DELETE CASCADE,
    CONSTRAINT fk_proveedorArticulo_idProveedor FOREIGN KEY(idProveedor) REFERENCES proveedor(id) ON DELETE CASCADE
);

CREATE TABLE cliente (
    id          NUMBER(15),
    correo      VARCHAR2(50),
    telefono    NUMBER(12),
    nombre      VARCHAR2(50) NOT NULL,
    apellido1   VARCHAR2(50) NOT NULL,
    apellido2   VARCHAR2(50),
    CONSTRAINT pk_cliente PRIMARY KEY(id),
    CONSTRAINT uk_cliente_correo UNIQUE(correo),
    CONSTRAINT uk_cliente_telefono UNIQUE(telefono),
    CONSTRAINT ck_cliente_correOtel CHECK (correo IS NOT NULL OR telefono IS NOT NULL)
);

CREATE TABLE direccion (
    id              NUMBER(15),
    tipoVia         VARCHAR2(50) NOT NULL,
    nombreVia       VARCHAR2(50) NOT NULL,
    numInmueble     NUMBER(3) NOT NULL,
    numBloque       NUMBER(3),
    escalera        VARCHAR2(50),
    piso            NUMBER(3),
    puerta          VARCHAR2(1),
    codigoPostal    NUMBER(5) NOT NULL,
    ciudad          VARCHAR2(50) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_direccion PRIMARY KEY(id)
);

CREATE TABLE tarjetaCredito (
    numTarjeta      NUMBER(20),
    titular         VARCHAR2(50) NOT NULL,
    company         VARCHAR2(50) NOT NULL,
    caducidadMes       NUMBER(2) NOT NULL,
    caducidadYear      NUMBER(4) NOT NULL,
    CONSTRAINT pk_tarjetaCredito PRIMARY KEY(numTarjeta)
);

CREATE TABLE descuento (
    id          NUMBER(15),
    porcentaje  NUMBER(4)  NOT NULL,
    fecha       VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_descuento PRIMARY KEY(id),
    CONSTRAINT ck_porcentaje CHECK (porcentaje BETWEEN 0 AND 100)
);

CREATE TABLE registrado (
    id                  NUMBER(15),
    usuario             VARCHAR2(50) NOT NULL,
    password            VARCHAR2(50) NOT NULL,         
    fechaRegistro       VARCHAR2(50) NOT NULL,
    horaRegistro        VARCHAR2(50) NOT NULL,
    preferenciaContacto VARCHAR2(50) NOT NULL,
    direccion           NUMBER(7) NOT NULL,
    tarjeta             NUMBER(7) NOT NULL,
    bonoDescuento       NUMBER(7) NOT NULL,
    CONSTRAINT fk_registrado_id FOREIGN KEY(id) REFERENCES cliente(id) ON DELETE CASCADE,
    CONSTRAINT fk_registrado_direccion FOREIGN KEY(direccion) REFERENCES direccion(id), --seria restrcit pero no existe en oracle
    CONSTRAINT fk_registrado_tarjeta FOREIGN KEY(tarjeta) REFERENCES tarjetaCredito(numTarjeta), --seria restrcit pero no existe en oracle
    CONSTRAINT fk_registrado_bonoDescuento FOREIGN KEY(bonoDescuento) REFERENCES descuento(id),
    CONSTRAINT ck_registrado_preferenciaContacto CHECK (preferenciaContacto IN 
    ('correo', 'llamada telefÃ³nica', 'sms', 'whatsapp', 'facebook', 'wechat', 'qqmobile', 'snapchat', 'telegram')),
    CONSTRAINT uk_registrado_usuario UNIQUE(usuario)
);


CREATE TABLE pedidoCliente (
    id              NUMBER(15),
    fecha           DATE NOT NULL,
    direccion       NUMBER(7) NOT NULL,
    horaPago        VARCHAR2(50) NOT NULL,
    fechaPago       VARCHAR2(50) NOT NULL,
    tarjeta         NUMBER(10) NOT NULL,
    fechaEntrega    VARCHAR2(50) NOT NULL,
    horaEntrega     VARCHAR2(50) NOT NULL,
    precioTotal     NUMBER(7) NOT NULL,
    tipoPago        VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_pedidoCliente PRIMARY KEY(id),
    CONSTRAINT fk_pedidoCliente_direccion FOREIGN KEY(direccion) REFERENCES direccion(id),
    CONSTRAINT fk_pedidoCliente_tarjeta FOREIGN KEY(tarjeta) REFERENCES tarjetaCredito(numTarjeta)
);

CREATE TABLE pedidoArticuloCliente (
    idPedido        NUMBER(15) NOT NULL,
    idArticulo      NUMBER(15) NOT NULL,
    idClienteReg    NUMBER(15) NOT NULL,
    cantidad        NUMBER(7) NOT NULL,
    cliente_reg     VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_pedidoArticuloCliente_idPedido FOREIGN KEY(idPedido) REFERENCES pedidoCliente(id),
    CONSTRAINT fk_pedidoArticuloCliente_idArticulo FOREIGN KEY(idArticulo) REFERENCES articulo(idCodigo),
    CONSTRAINT fk_pedidoArticuloCliente_idClienteReg FOREIGN KEY(idClienteReg) REFERENCES cliente(id)
);



CREATE TABLE  review(
    id          NUMBER(15),
    usuario     VARCHAR2(50) NOT NULL,
    articulo    NUMBER(10) NOT NULL,
    puntuacion  NUMBER(2) NOT NULL,
    titulo      VARCHAR2(50) NOT NULL,
    texto       VARCHAR2(500) NOT NULL,
    meGusta        NUMBER(10)  NOT NULL,
    refrenda     VARCHAR2(4) NOT NULL,
    fecha       VARCHAR2(50) NOT NULL,
    hora        VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_review PRIMARY KEY(id),
    CONSTRAINT fk_review_usuario FOREIGN KEY(usuario) REFERENCES registrado(usuario) ON DELETE SET NULL, --seria SET DEAFUALT pero no existe en oracle
    CONSTRAINT fk_review_articulo FOREIGN KEY(articulo) REFERENCES articulo(idCodigo) ON DELETE CASCADE,
    CONSTRAINT ck_puntuacion CHECK(puntuacion BETWEEN 0 AND 10),
    CONSTRAINT ck_refrenda CHECK (refrenda IN('yes','no'))
);


--preguntar a Javier Calle not null en pk, 
--dominios, numeros negativos, 
--como se pone los mayeres menores, delete y update
--como sabes que el pedido ya esta cumplido
--meter atribudo registrado? en peidoArticuloCliente
--si borras tarjeta
--que pasa con los updates