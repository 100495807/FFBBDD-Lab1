DROP TABLE review CASCADE CONSTRAINTS;
DROP TABLE pedidoArticuloCliente CASCADE CONSTRAINTS;
DROP TABLE pedidoCliente CASCADE CONSTRAINTS;
DROP TABLE registrado CASCADE CONSTRAINTS;
DROP TABLE descuento CASCADE CONSTRAINTS;
DROP TABLE tarjetaCredito CASCADE CONSTRAINTS;
DROP TABLE direccion CASCADE CONSTRAINTS;
DROP TABLE cliente CASCADE CONSTRAINTS;
DROP TABLE proveedorArticulo CASCADE CONSTRAINTS;
DROP TABLE pedidosProveedor CASCADE CONSTRAINTS;
DROP TABLE proveedor CASCADE CONSTRAINTS;
DROP TABLE articulo CASCADE CONSTRAINTS;
DROP TABLE formatoProducto CASCADE CONSTRAINTS;
DROP TABLE cantidad CASCADE CONSTRAINTS;
DROP TABLE formato CASCADE CONSTRAINTS;
DROP TABLE producto CASCADE CONSTRAINTS;





CREATE TABLE producto (         
    nombre      VARCHAR2 (50),
    coffea      VARCHAR2 (50) NOT NULL,
    varietal    VARCHAR2 (50) NOT NULL, ------etc
    origen      VARCHAR2 (50) NOT NULL,
    tostado     VARCHAR2 (50) NOT NULL,
    cafeina     VARCHAR2 (50) NOT NULL,            --yes/no
    CONSTRAINT pk_producto PRIMARY KEY (nombre),
    CONSTRAINT ck_producto_cafeina CHECK (cafeina IN ('yes','no')),
    CONSTRAINT ck_producto_tostado CHECK (tostado IN ('natural', 'high-roast', 'blend'))
);

CREATE TABLE formato (
    nombre      VARCHAR2(50),
    CONSTRAINT pk_formato PRIMARY KEY(nombre),
    CONSTRAINT ck_formato CHECK (nombre IN ('raw bean', 'roasted bean', 'ground', 'freeze-dried', 'capsules', 'prepared'))--PONER TILDE EN CAPSULA
);

CREATE TABLE cantidad (
    packaging   VARCHAR2(50),
    cantidad    VARCHAR2(50),
    magnitud    VARCHAR2(50),
    CONSTRAINT pk_cantidad PRIMARY KEY(packaging, cantidad, magnitud)
);

CREATE TABLE formatoProducto (
    idProducto     VARCHAR2(50) NOT NULL,
    idFormato      VARCHAR2(50) NOT NULL,
    packaging     VARCHAR2(50) NOT NULL,
    cantidad       VARCHAR2(50) NOT NULL,
    magnitud        VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_formatoProducto_idProducto FOREIGN KEY(idProducto) REFERENCES producto(nombre) ON DELETE CASCADE,
    CONSTRAINT fk_formatoProducto_idFormato FOREIGN KEY(idFormato) REFERENCES formato(nombre) ON DELETE CASCADE,
    CONSTRAINT fk_formatoProducto_cantidad FOREIGN KEY(packaging, cantidad, magnitud) REFERENCES cantidad(packaging, cantidad, magnitud) ON DELETE CASCADE
);

CREATE TABLE articulo (
    idCodigo    CHAR(15),
    packaging   VARCHAR(50) NOT NULL,
    cantidad    VARCHAR2(50) NOT NULL,
    magnitud    VARCHAR2(50) NOT NULL,
    pvp         VARCHAR2(50) NOT NULL,
    stock       NUMBER(6) NOT NULL,
    producto    VARCHAR2(50) NOT NULL,
    stockMin    NUMBER(6) NOT NULL,
    stockMax    NUMBER(6) NOT NULL,
    CONSTRAINT pk_articulo PRIMARY KEY(idCodigo),
    CONSTRAINT fk_articulo_cantidad FOREIGN KEY(packaging, cantidad, magnitud) REFERENCES cantidad(packaging, cantidad, magnitud) ON DELETE CASCADE,
    CONSTRAINT fk_articulo_producto FOREIGN KEY(producto) REFERENCES producto(nombre) ON DELETE CASCADE,
    CONSTRAINT ck_articulo_stockMin CHECK (stockMin>5),
    CONSTRAINT ck_articulo_stockMax CHECK (stockMax<15)
);

CREATE TABLE proveedor (
    cif             CHAR(10), --chequear cuantos digitos tiene el char del cif
    nombreComercio  VARCHAR2(50) NOT NULL,
    correo          VARCHAR2(50) NOT NULL,
    telefono        VARCHAR2(50) NOT NULL,
    CuentaBanco    VARCHAR2(50) NOT NULL,                          
    DireccionPostal  VARCHAR2(200) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    tiempoMedio     VARCHAR2(50) NOT NULL,
    numPedido       VARCHAR2(50) NOT NULL,
    persona         VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_proveedor PRIMARY KEY(cif),
    CONSTRAINT uk_proveedor_nombreComercio UNIQUE (nombreComercio),
    CONSTRAINT uk_proveedor_correo UNIQUE (correo),
    CONSTRAINT uk_proveedor_telefono UNIQUE (telefono),
    CONSTRAINT uk_proveedor_CuentaBanco UNIQUE (CuentaBanco),
    CONSTRAINT uk_proveedor_Direccion_Postal UNIQUE (DireccionPostal)
);

CREATE TABLE pedidosProveedor ( 
    proveedor           CHAR(10) NOT NULL,
    cantidadUnidad      VARCHAR2(50) NOT NULL,
    fecha               VARCHAR2(50) NOT NULL,
    hora                VARCHAR2(50) NOT NULL,
    estado              VARCHAR2(20) NOT NULL,
    articulo            VARCHAR2(50) NOT NULL,
    costePedidoTotal    VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_pedidosProveedor PRIMARY KEY(proveedor),
    CONSTRAINT fk_pedidosProveedor_proveedor FOREIGN KEY(proveedor) REFERENCES proveedor(cif) ON DELETE SET NULL,
    CONSTRAINT fk_pedidosProveedor_articulo FOREIGN KEY(articulo) REFERENCES articulo(idCodigo), --oracle no poner nada es DNA o UNA
    CONSTRAINT ck_pedidosProveedor_estado CHECK (estado IN ('draft', 'placed', 'fulfilled'))
);

CREATE TABLE proveedorArticulo (
    idArticulo      VARCHAR2(50) NOT NULL,
    idProveedor     CHAR(10) NOT NULL,
    coste           VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_proveedorArticulo_idArticulo FOREIGN KEY(idArticulo) REFERENCES articulo(idCodigo) ON DELETE CASCADE,
    CONSTRAINT fk_proveedorArticulo_idProveedor FOREIGN KEY(idProveedor) REFERENCES proveedor(cif) ON DELETE CASCADE
);


CREATE TABLE direccion (
    tipoVia         VARCHAR2(50) NOT NULL,
    nombreVia       VARCHAR2(50) NOT NULL,
    numInmueble     VARCHAR2(3) NOT NULL,
    numBloque       VARCHAR2(3),
    escalera        VARCHAR2(50),
    piso            VARCHAR2(2),
    puerta          VARCHAR2(2),
    codigoPostal    VARCHAR2(50) NOT NULL,
    ciudad          VARCHAR2(50) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_direccion PRIMARY KEY(tipoVia, nombreVia, numInmueble, numBloque, escalera, piso, puerta, codigoPostal, ciudad, pais)
);

CREATE TABLE tarjetaCredito (
    numTarjeta      VARCHAR2(50),
    titular         VARCHAR2(50) NOT NULL,
    company         VARCHAR2(50) NOT NULL,
    caducidadMes       CHAR(2) NOT NULL,
    caducidadYear      CHAR(2) NOT NULL,
    CONSTRAINT pk_tarjetaCredito PRIMARY KEY(numTarjeta)
);

CREATE TABLE descuento (
    idUsuario          VARCHAR2(50),
    porcentaje  VARCHAR(50)  NOT NULL,
    fecha       VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_descuento PRIMARY KEY(idUsuario),
    CONSTRAINT ck_porcentaje CHECK (porcentaje BETWEEN 0 AND 100)
);

CREATE TABLE registrado (
    usuario             VARCHAR2(50),
    contrasena            VARCHAR2(50) NOT NULL,         
    fechaHoraRegistro     DATE NOT NULL,
    preferenciaContacto VARCHAR2(50) NOT NULL,
    tarjeta             VARCHAR2(50) NOT NULL,
    bonoDescuento       VARCHAR2(50) NOT NULL,
    tipoVia         VARCHAR2(50) NOT NULL,
    nombreVia       VARCHAR2(50) NOT NULL,
    numInmueble     VARCHAR2(3) NOT NULL,
    numBloque       VARCHAR2(3),
    escalera        VARCHAR2(50),
    piso            VARCHAR2(2),
    puerta          VARCHAR2(2),
    codigoPostal    VARCHAR2(50) NOT NULL,
    ciudad          VARCHAR2(50) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_registrado_usuario PRIMARY KEY(usuario),
    CONSTRAINT fk_registrado_direccion FOREIGN KEY(tipoVia, nombreVia, numInmueble, numBloque, escalera, piso, puerta, codigoPostal, ciudad, pais) REFERENCES direccion(tipoVia, nombreVia, numInmueble, numBloque, escalera, piso, puerta, codigoPostal, ciudad, pais), --seria restrcit pero no existe en oracle
    CONSTRAINT fk_registrado_tarjeta FOREIGN KEY(tarjeta) REFERENCES tarjetaCredito(numTarjeta), --seria restrcit pero no existe en oracle
    CONSTRAINT fk_registrado_bonoDescuento FOREIGN KEY(bonoDescuento) REFERENCES descuento(idUsuario),
    CONSTRAINT ck_registrado_preferenciaContacto CHECK (preferenciaContacto IN 
    ('correo', 'llamada telefÃ³nica', 'sms', 'whatsapp', 'facebook', 'wechat', 'qqmobile', 'snapchat', 'telegram'))
);


CREATE TABLE pedidoCliente (
    correo         VARCHAR2(50),
    telefono        VARCHAR2(50),
    nombre          VARCHAR2(50) NOT NULL,
    apellido1       VARCHAR2(50) NOT NULL,
    apellido2       VARCHAR2(50),
    fecha           DATE NOT NULL,
    fechaHoraPago   DATE NOT NULL,
    tarjeta         VARCHAR2(50) NOT NULL,
    fechaHoraEntrega  DATE NOT NULL,
    precioTotal     VARCHAR2(50) NOT NULL,
    tipoPago        VARCHAR2(50) NOT NULL,
    tipoVia         VARCHAR2(50) NOT NULL,
    nombreVia       VARCHAR2(50) NOT NULL,
    numInmueble     VARCHAR2(3) NOT NULL,
    numBloque       VARCHAR2(3),
    escalera        VARCHAR2(50),
    piso            VARCHAR2(2),
    puerta          VARCHAR2(2),
    codigoPostal    VARCHAR2(50) NOT NULL,
    ciudad          VARCHAR2(50) NOT NULL,
    pais            VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_pedidoCliente PRIMARY KEY(correo, telefono),
    CONSTRAINT fk_pedidoCliente_direccion FOREIGN KEY(tipoVia, nombreVia, numInmueble, numBloque, escalera, piso, puerta, codigoPostal, ciudad, pais) REFERENCES direccion(tipoVia, nombreVia, numInmueble, numBloque, escalera, piso, puerta, codigoPostal, ciudad, pais),
    CONSTRAINT fk_pedidoCliente_tarjeta FOREIGN KEY(tarjeta) REFERENCES tarjetaCredito(numTarjeta),
    CONSTRAINT uk_cliente_correo UNIQUE(correo),
    CONSTRAINT uk_cliente_telefono UNIQUE(telefono),
    CONSTRAINT ck_cliente_correOtel CHECK (correo IS NOT NULL OR telefono IS NOT NULL)
);

CREATE TABLE pedidoArticuloCliente (
    idArticulo      VARCHAR2(50) NOT NULL,
    idClienteReg    VARCHAR2(50),
    cantidad        VARCHAR2(50) NOT NULL,
    correo         VARCHAR2(50),
    telefono        VARCHAR2(50),
    CONSTRAINT fk_pedidoArticuloCliente_idPedido FOREIGN KEY(correo, telefono) REFERENCES pedidoCliente(correo, telefono),
    CONSTRAINT fk_pedidoArticuloCliente_idArticulo FOREIGN KEY(idArticulo) REFERENCES articulo(idCodigo),
    CONSTRAINT fk_pedidoArticuloCliente_idClienteReg FOREIGN KEY(idClienteReg) REFERENCES registrado(usuario)
);



CREATE TABLE  review(
    fechaHora   DATE,            --si se borra el usuario registrado se adjudica la review a un usuario creado que se llama anonimo o se elimina la review directamente
    usuario     VARCHAR2(50),
    producto    VARCHAR2(50),
    articulo    CHAR(15) NOT NULL,
    puntuacion  VARCHAR2(2) NOT NULL,
    titulo      VARCHAR2(50) NOT NULL,
    texto       VARCHAR2(500) NOT NULL,
    meGusta        VARCHAR2(10)  NOT NULL,
    refrenda     VARCHAR2(4) NOT NULL,
    CONSTRAINT pk_review PRIMARY KEY(fechaHora, usuario, producto),
    CONSTRAINT fk_review_usuario FOREIGN KEY(usuario) REFERENCES registrado(usuario) ON DELETE SET NULL, --seria SET DEAFUALT pero no existe en oracle
    CONSTRAINT fk_review_articulo FOREIGN KEY(articulo) REFERENCES articulo(idCodigo) ON DELETE CASCADE,
    CONSTRAINT fk_review_producto FOREIGN KEY(producto) REFERENCES producto(nombre) ON DELETE CASCADE,
    CONSTRAINT ck_puntuacion CHECK(puntuacion BETWEEN 0 AND 10),
    CONSTRAINT ck_refrenda CHECK (refrenda IN('yes','no'))
);


--preguntar a Javier Calle not null en pk, 
--dominios, numeros negativos, 
--como se pone los mayeres menores, delete y update
--como sabes que el pedido ya esta cumplido
--meter atribudo registrado? en peidoArticuloCliente
--si borras tarjeta
--que pasa con los updates